//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Services.WeatherBugWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WeatherBugWebServicesSoap", Namespace="http://api.wxbug.net/")]
    public partial class WeatherBugWebServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetLocationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUSWorldCityByLatLongOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationListByCityCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationListByUSZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveCompactWeatherByCityCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveCompactWeatherByUSZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveCompactWeatherByStationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveWeatherByCityCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveWeatherByUSZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveWeatherByStationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlertsDataListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlertsIssueDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForecastIssueDetailsByCityCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForecastIssueDetailsByUSZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForecastByCityCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForecastByUSZipCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WeatherBugWebServices() {
            this.Url = global::Services.Properties.Settings.Default.Services_WeatherBugWebService_WeatherBugWebServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetLocationListCompletedEventHandler GetLocationListCompleted;
        
        /// <remarks/>
        public event GetUSWorldCityByLatLongCompletedEventHandler GetUSWorldCityByLatLongCompleted;
        
        /// <remarks/>
        public event GetStationListByCityCodeCompletedEventHandler GetStationListByCityCodeCompleted;
        
        /// <remarks/>
        public event GetStationListByUSZipCodeCompletedEventHandler GetStationListByUSZipCodeCompleted;
        
        /// <remarks/>
        public event GetLiveCompactWeatherByCityCodeCompletedEventHandler GetLiveCompactWeatherByCityCodeCompleted;
        
        /// <remarks/>
        public event GetLiveCompactWeatherByUSZipCodeCompletedEventHandler GetLiveCompactWeatherByUSZipCodeCompleted;
        
        /// <remarks/>
        public event GetLiveCompactWeatherByStationIDCompletedEventHandler GetLiveCompactWeatherByStationIDCompleted;
        
        /// <remarks/>
        public event GetLiveWeatherByCityCodeCompletedEventHandler GetLiveWeatherByCityCodeCompleted;
        
        /// <remarks/>
        public event GetLiveWeatherByUSZipCodeCompletedEventHandler GetLiveWeatherByUSZipCodeCompleted;
        
        /// <remarks/>
        public event GetLiveWeatherByStationIDCompletedEventHandler GetLiveWeatherByStationIDCompleted;
        
        /// <remarks/>
        public event GetAlertsDataListCompletedEventHandler GetAlertsDataListCompleted;
        
        /// <remarks/>
        public event GetAlertsIssueDataCompletedEventHandler GetAlertsIssueDataCompleted;
        
        /// <remarks/>
        public event GetForecastIssueDetailsByCityCodeCompletedEventHandler GetForecastIssueDetailsByCityCodeCompleted;
        
        /// <remarks/>
        public event GetForecastIssueDetailsByUSZipCodeCompletedEventHandler GetForecastIssueDetailsByUSZipCodeCompleted;
        
        /// <remarks/>
        public event GetForecastByCityCodeCompletedEventHandler GetForecastByCityCodeCompleted;
        
        /// <remarks/>
        public event GetForecastByUSZipCodeCompletedEventHandler GetForecastByUSZipCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetLocationList", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiLocationData[] GetLocationList(string searchString, string ACode) {
            object[] results = this.Invoke("GetLocationList", new object[] {
                        searchString,
                        ACode});
            return ((ApiLocationData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationListAsync(string searchString, string ACode) {
            this.GetLocationListAsync(searchString, ACode, null);
        }
        
        /// <remarks/>
        public void GetLocationListAsync(string searchString, string ACode, object userState) {
            if ((this.GetLocationListOperationCompleted == null)) {
                this.GetLocationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationListOperationCompleted);
            }
            this.InvokeAsync("GetLocationList", new object[] {
                        searchString,
                        ACode}, this.GetLocationListOperationCompleted, userState);
        }
        
        private void OnGetLocationListOperationCompleted(object arg) {
            if ((this.GetLocationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationListCompleted(this, new GetLocationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetUSWorldCityByLatLong", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationUSWorldCityData GetUSWorldCityByLatLong(decimal latitude, decimal longitude, string ACode) {
            object[] results = this.Invoke("GetUSWorldCityByLatLong", new object[] {
                        latitude,
                        longitude,
                        ACode});
            return ((LocationUSWorldCityData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUSWorldCityByLatLongAsync(decimal latitude, decimal longitude, string ACode) {
            this.GetUSWorldCityByLatLongAsync(latitude, longitude, ACode, null);
        }
        
        /// <remarks/>
        public void GetUSWorldCityByLatLongAsync(decimal latitude, decimal longitude, string ACode, object userState) {
            if ((this.GetUSWorldCityByLatLongOperationCompleted == null)) {
                this.GetUSWorldCityByLatLongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUSWorldCityByLatLongOperationCompleted);
            }
            this.InvokeAsync("GetUSWorldCityByLatLong", new object[] {
                        latitude,
                        longitude,
                        ACode}, this.GetUSWorldCityByLatLongOperationCompleted, userState);
        }
        
        private void OnGetUSWorldCityByLatLongOperationCompleted(object arg) {
            if ((this.GetUSWorldCityByLatLongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUSWorldCityByLatLongCompleted(this, new GetUSWorldCityByLatLongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetStationListByCityCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiStationData[] GetStationListByCityCode(string cityCode, UnitType unitType, string ACode) {
            object[] results = this.Invoke("GetStationListByCityCode", new object[] {
                        cityCode,
                        unitType,
                        ACode});
            return ((ApiStationData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStationListByCityCodeAsync(string cityCode, UnitType unitType, string ACode) {
            this.GetStationListByCityCodeAsync(cityCode, unitType, ACode, null);
        }
        
        /// <remarks/>
        public void GetStationListByCityCodeAsync(string cityCode, UnitType unitType, string ACode, object userState) {
            if ((this.GetStationListByCityCodeOperationCompleted == null)) {
                this.GetStationListByCityCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationListByCityCodeOperationCompleted);
            }
            this.InvokeAsync("GetStationListByCityCode", new object[] {
                        cityCode,
                        unitType,
                        ACode}, this.GetStationListByCityCodeOperationCompleted, userState);
        }
        
        private void OnGetStationListByCityCodeOperationCompleted(object arg) {
            if ((this.GetStationListByCityCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationListByCityCodeCompleted(this, new GetStationListByCityCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetStationListByUSZipCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiStationData[] GetStationListByUSZipCode(string zipCode, UnitType unitType, string ACode) {
            object[] results = this.Invoke("GetStationListByUSZipCode", new object[] {
                        zipCode,
                        unitType,
                        ACode});
            return ((ApiStationData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStationListByUSZipCodeAsync(string zipCode, UnitType unitType, string ACode) {
            this.GetStationListByUSZipCodeAsync(zipCode, unitType, ACode, null);
        }
        
        /// <remarks/>
        public void GetStationListByUSZipCodeAsync(string zipCode, UnitType unitType, string ACode, object userState) {
            if ((this.GetStationListByUSZipCodeOperationCompleted == null)) {
                this.GetStationListByUSZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationListByUSZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetStationListByUSZipCode", new object[] {
                        zipCode,
                        unitType,
                        ACode}, this.GetStationListByUSZipCodeOperationCompleted, userState);
        }
        
        private void OnGetStationListByUSZipCodeOperationCompleted(object arg) {
            if ((this.GetStationListByUSZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationListByUSZipCodeCompleted(this, new GetStationListByUSZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetLiveCompactWeatherByCityCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LiveCompactWeatherData GetLiveCompactWeatherByCityCode(string cityCode, UnitType unittype, string ACode) {
            object[] results = this.Invoke("GetLiveCompactWeatherByCityCode", new object[] {
                        cityCode,
                        unittype,
                        ACode});
            return ((LiveCompactWeatherData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveCompactWeatherByCityCodeAsync(string cityCode, UnitType unittype, string ACode) {
            this.GetLiveCompactWeatherByCityCodeAsync(cityCode, unittype, ACode, null);
        }
        
        /// <remarks/>
        public void GetLiveCompactWeatherByCityCodeAsync(string cityCode, UnitType unittype, string ACode, object userState) {
            if ((this.GetLiveCompactWeatherByCityCodeOperationCompleted == null)) {
                this.GetLiveCompactWeatherByCityCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveCompactWeatherByCityCodeOperationCompleted);
            }
            this.InvokeAsync("GetLiveCompactWeatherByCityCode", new object[] {
                        cityCode,
                        unittype,
                        ACode}, this.GetLiveCompactWeatherByCityCodeOperationCompleted, userState);
        }
        
        private void OnGetLiveCompactWeatherByCityCodeOperationCompleted(object arg) {
            if ((this.GetLiveCompactWeatherByCityCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveCompactWeatherByCityCodeCompleted(this, new GetLiveCompactWeatherByCityCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetLiveCompactWeatherByUSZipCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LiveCompactWeatherData GetLiveCompactWeatherByUSZipCode(string zipCode, UnitType unittype, string ACode) {
            object[] results = this.Invoke("GetLiveCompactWeatherByUSZipCode", new object[] {
                        zipCode,
                        unittype,
                        ACode});
            return ((LiveCompactWeatherData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveCompactWeatherByUSZipCodeAsync(string zipCode, UnitType unittype, string ACode) {
            this.GetLiveCompactWeatherByUSZipCodeAsync(zipCode, unittype, ACode, null);
        }
        
        /// <remarks/>
        public void GetLiveCompactWeatherByUSZipCodeAsync(string zipCode, UnitType unittype, string ACode, object userState) {
            if ((this.GetLiveCompactWeatherByUSZipCodeOperationCompleted == null)) {
                this.GetLiveCompactWeatherByUSZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveCompactWeatherByUSZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetLiveCompactWeatherByUSZipCode", new object[] {
                        zipCode,
                        unittype,
                        ACode}, this.GetLiveCompactWeatherByUSZipCodeOperationCompleted, userState);
        }
        
        private void OnGetLiveCompactWeatherByUSZipCodeOperationCompleted(object arg) {
            if ((this.GetLiveCompactWeatherByUSZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveCompactWeatherByUSZipCodeCompleted(this, new GetLiveCompactWeatherByUSZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetLiveCompactWeatherByStationID", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LiveCompactWeatherData GetLiveCompactWeatherByStationID(string stationid, UnitType unittype, string ACode) {
            object[] results = this.Invoke("GetLiveCompactWeatherByStationID", new object[] {
                        stationid,
                        unittype,
                        ACode});
            return ((LiveCompactWeatherData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveCompactWeatherByStationIDAsync(string stationid, UnitType unittype, string ACode) {
            this.GetLiveCompactWeatherByStationIDAsync(stationid, unittype, ACode, null);
        }
        
        /// <remarks/>
        public void GetLiveCompactWeatherByStationIDAsync(string stationid, UnitType unittype, string ACode, object userState) {
            if ((this.GetLiveCompactWeatherByStationIDOperationCompleted == null)) {
                this.GetLiveCompactWeatherByStationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveCompactWeatherByStationIDOperationCompleted);
            }
            this.InvokeAsync("GetLiveCompactWeatherByStationID", new object[] {
                        stationid,
                        unittype,
                        ACode}, this.GetLiveCompactWeatherByStationIDOperationCompleted, userState);
        }
        
        private void OnGetLiveCompactWeatherByStationIDOperationCompleted(object arg) {
            if ((this.GetLiveCompactWeatherByStationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveCompactWeatherByStationIDCompleted(this, new GetLiveCompactWeatherByStationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetLiveWeatherByCityCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LiveWeatherData GetLiveWeatherByCityCode(string cityCode, UnitType unittype, string ACode) {
            object[] results = this.Invoke("GetLiveWeatherByCityCode", new object[] {
                        cityCode,
                        unittype,
                        ACode});
            return ((LiveWeatherData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveWeatherByCityCodeAsync(string cityCode, UnitType unittype, string ACode) {
            this.GetLiveWeatherByCityCodeAsync(cityCode, unittype, ACode, null);
        }
        
        /// <remarks/>
        public void GetLiveWeatherByCityCodeAsync(string cityCode, UnitType unittype, string ACode, object userState) {
            if ((this.GetLiveWeatherByCityCodeOperationCompleted == null)) {
                this.GetLiveWeatherByCityCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveWeatherByCityCodeOperationCompleted);
            }
            this.InvokeAsync("GetLiveWeatherByCityCode", new object[] {
                        cityCode,
                        unittype,
                        ACode}, this.GetLiveWeatherByCityCodeOperationCompleted, userState);
        }
        
        private void OnGetLiveWeatherByCityCodeOperationCompleted(object arg) {
            if ((this.GetLiveWeatherByCityCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveWeatherByCityCodeCompleted(this, new GetLiveWeatherByCityCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetLiveWeatherByUSZipCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LiveWeatherData GetLiveWeatherByUSZipCode(string zipCode, UnitType unittype, string ACode) {
            object[] results = this.Invoke("GetLiveWeatherByUSZipCode", new object[] {
                        zipCode,
                        unittype,
                        ACode});
            return ((LiveWeatherData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveWeatherByUSZipCodeAsync(string zipCode, UnitType unittype, string ACode) {
            this.GetLiveWeatherByUSZipCodeAsync(zipCode, unittype, ACode, null);
        }
        
        /// <remarks/>
        public void GetLiveWeatherByUSZipCodeAsync(string zipCode, UnitType unittype, string ACode, object userState) {
            if ((this.GetLiveWeatherByUSZipCodeOperationCompleted == null)) {
                this.GetLiveWeatherByUSZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveWeatherByUSZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetLiveWeatherByUSZipCode", new object[] {
                        zipCode,
                        unittype,
                        ACode}, this.GetLiveWeatherByUSZipCodeOperationCompleted, userState);
        }
        
        private void OnGetLiveWeatherByUSZipCodeOperationCompleted(object arg) {
            if ((this.GetLiveWeatherByUSZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveWeatherByUSZipCodeCompleted(this, new GetLiveWeatherByUSZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetLiveWeatherByStationID", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LiveWeatherData GetLiveWeatherByStationID(string stationid, UnitType unittype, string ACode) {
            object[] results = this.Invoke("GetLiveWeatherByStationID", new object[] {
                        stationid,
                        unittype,
                        ACode});
            return ((LiveWeatherData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveWeatherByStationIDAsync(string stationid, UnitType unittype, string ACode) {
            this.GetLiveWeatherByStationIDAsync(stationid, unittype, ACode, null);
        }
        
        /// <remarks/>
        public void GetLiveWeatherByStationIDAsync(string stationid, UnitType unittype, string ACode, object userState) {
            if ((this.GetLiveWeatherByStationIDOperationCompleted == null)) {
                this.GetLiveWeatherByStationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveWeatherByStationIDOperationCompleted);
            }
            this.InvokeAsync("GetLiveWeatherByStationID", new object[] {
                        stationid,
                        unittype,
                        ACode}, this.GetLiveWeatherByStationIDOperationCompleted, userState);
        }
        
        private void OnGetLiveWeatherByStationIDOperationCompleted(object arg) {
            if ((this.GetLiveWeatherByStationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveWeatherByStationIDCompleted(this, new GetLiveWeatherByStationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetAlertsDataList", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiAlertData[] GetAlertsDataList(string zipCode, string ACode) {
            object[] results = this.Invoke("GetAlertsDataList", new object[] {
                        zipCode,
                        ACode});
            return ((ApiAlertData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAlertsDataListAsync(string zipCode, string ACode) {
            this.GetAlertsDataListAsync(zipCode, ACode, null);
        }
        
        /// <remarks/>
        public void GetAlertsDataListAsync(string zipCode, string ACode, object userState) {
            if ((this.GetAlertsDataListOperationCompleted == null)) {
                this.GetAlertsDataListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlertsDataListOperationCompleted);
            }
            this.InvokeAsync("GetAlertsDataList", new object[] {
                        zipCode,
                        ACode}, this.GetAlertsDataListOperationCompleted, userState);
        }
        
        private void OnGetAlertsDataListOperationCompleted(object arg) {
            if ((this.GetAlertsDataListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlertsDataListCompleted(this, new GetAlertsDataListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetAlertsIssueData", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiAlertIssueData GetAlertsIssueData(string zipCode, string ACode) {
            object[] results = this.Invoke("GetAlertsIssueData", new object[] {
                        zipCode,
                        ACode});
            return ((ApiAlertIssueData)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlertsIssueDataAsync(string zipCode, string ACode) {
            this.GetAlertsIssueDataAsync(zipCode, ACode, null);
        }
        
        /// <remarks/>
        public void GetAlertsIssueDataAsync(string zipCode, string ACode, object userState) {
            if ((this.GetAlertsIssueDataOperationCompleted == null)) {
                this.GetAlertsIssueDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlertsIssueDataOperationCompleted);
            }
            this.InvokeAsync("GetAlertsIssueData", new object[] {
                        zipCode,
                        ACode}, this.GetAlertsIssueDataOperationCompleted, userState);
        }
        
        private void OnGetAlertsIssueDataOperationCompleted(object arg) {
            if ((this.GetAlertsIssueDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlertsIssueDataCompleted(this, new GetAlertsIssueDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetForecastIssueDetailsByCityCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiForecastIssueData GetForecastIssueDetailsByCityCode(string cityCode, string ACode) {
            object[] results = this.Invoke("GetForecastIssueDetailsByCityCode", new object[] {
                        cityCode,
                        ACode});
            return ((ApiForecastIssueData)(results[0]));
        }
        
        /// <remarks/>
        public void GetForecastIssueDetailsByCityCodeAsync(string cityCode, string ACode) {
            this.GetForecastIssueDetailsByCityCodeAsync(cityCode, ACode, null);
        }
        
        /// <remarks/>
        public void GetForecastIssueDetailsByCityCodeAsync(string cityCode, string ACode, object userState) {
            if ((this.GetForecastIssueDetailsByCityCodeOperationCompleted == null)) {
                this.GetForecastIssueDetailsByCityCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForecastIssueDetailsByCityCodeOperationCompleted);
            }
            this.InvokeAsync("GetForecastIssueDetailsByCityCode", new object[] {
                        cityCode,
                        ACode}, this.GetForecastIssueDetailsByCityCodeOperationCompleted, userState);
        }
        
        private void OnGetForecastIssueDetailsByCityCodeOperationCompleted(object arg) {
            if ((this.GetForecastIssueDetailsByCityCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForecastIssueDetailsByCityCodeCompleted(this, new GetForecastIssueDetailsByCityCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetForecastIssueDetailsByUSZipCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiForecastIssueData GetForecastIssueDetailsByUSZipCode(string zipCode, string ACode) {
            object[] results = this.Invoke("GetForecastIssueDetailsByUSZipCode", new object[] {
                        zipCode,
                        ACode});
            return ((ApiForecastIssueData)(results[0]));
        }
        
        /// <remarks/>
        public void GetForecastIssueDetailsByUSZipCodeAsync(string zipCode, string ACode) {
            this.GetForecastIssueDetailsByUSZipCodeAsync(zipCode, ACode, null);
        }
        
        /// <remarks/>
        public void GetForecastIssueDetailsByUSZipCodeAsync(string zipCode, string ACode, object userState) {
            if ((this.GetForecastIssueDetailsByUSZipCodeOperationCompleted == null)) {
                this.GetForecastIssueDetailsByUSZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForecastIssueDetailsByUSZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetForecastIssueDetailsByUSZipCode", new object[] {
                        zipCode,
                        ACode}, this.GetForecastIssueDetailsByUSZipCodeOperationCompleted, userState);
        }
        
        private void OnGetForecastIssueDetailsByUSZipCodeOperationCompleted(object arg) {
            if ((this.GetForecastIssueDetailsByUSZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForecastIssueDetailsByUSZipCodeCompleted(this, new GetForecastIssueDetailsByUSZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetForecastByCityCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiForecastData[] GetForecastByCityCode(string cityCode, UnitType unitType, string ACode) {
            object[] results = this.Invoke("GetForecastByCityCode", new object[] {
                        cityCode,
                        unitType,
                        ACode});
            return ((ApiForecastData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForecastByCityCodeAsync(string cityCode, UnitType unitType, string ACode) {
            this.GetForecastByCityCodeAsync(cityCode, unitType, ACode, null);
        }
        
        /// <remarks/>
        public void GetForecastByCityCodeAsync(string cityCode, UnitType unitType, string ACode, object userState) {
            if ((this.GetForecastByCityCodeOperationCompleted == null)) {
                this.GetForecastByCityCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForecastByCityCodeOperationCompleted);
            }
            this.InvokeAsync("GetForecastByCityCode", new object[] {
                        cityCode,
                        unitType,
                        ACode}, this.GetForecastByCityCodeOperationCompleted, userState);
        }
        
        private void OnGetForecastByCityCodeOperationCompleted(object arg) {
            if ((this.GetForecastByCityCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForecastByCityCodeCompleted(this, new GetForecastByCityCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.wxbug.net/GetForecastByUSZipCode", RequestNamespace="http://api.wxbug.net/", ResponseNamespace="http://api.wxbug.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApiForecastData[] GetForecastByUSZipCode(string zipCode, UnitType unitType, string ACode) {
            object[] results = this.Invoke("GetForecastByUSZipCode", new object[] {
                        zipCode,
                        unitType,
                        ACode});
            return ((ApiForecastData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForecastByUSZipCodeAsync(string zipCode, UnitType unitType, string ACode) {
            this.GetForecastByUSZipCodeAsync(zipCode, unitType, ACode, null);
        }
        
        /// <remarks/>
        public void GetForecastByUSZipCodeAsync(string zipCode, UnitType unitType, string ACode, object userState) {
            if ((this.GetForecastByUSZipCodeOperationCompleted == null)) {
                this.GetForecastByUSZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForecastByUSZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetForecastByUSZipCode", new object[] {
                        zipCode,
                        unitType,
                        ACode}, this.GetForecastByUSZipCodeOperationCompleted, userState);
        }
        
        private void OnGetForecastByUSZipCodeOperationCompleted(object arg) {
            if ((this.GetForecastByUSZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForecastByUSZipCodeCompleted(this, new GetForecastByUSZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class ApiLocationData {
        
        private string cityField;
        
        private string cityCodeField;
        
        private string cityTypeField;
        
        private string countryField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private string stateField;
        
        private string stationIDField;
        
        private string stationNameField;
        
        private string zipCodeField;
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string CityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CityType {
            get {
                return this.cityTypeField;
            }
            set {
                this.cityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string StationID {
            get {
                return this.stationIDField;
            }
            set {
                this.stationIDField = value;
            }
        }
        
        /// <remarks/>
        public string StationName {
            get {
                return this.stationNameField;
            }
            set {
                this.stationNameField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class ApiForecastData {
        
        private string conditionIDField;
        
        private string descriptionField;
        
        private string iconField;
        
        private string imageField;
        
        private bool isNightField;
        
        private string predictionField;
        
        private string shortPredictionField;
        
        private string shortTitleField;
        
        private string tempHighField;
        
        private string tempLowField;
        
        private string tempUnitField;
        
        private string titleField;
        
        private string webUrlField;
        
        /// <remarks/>
        public string ConditionID {
            get {
                return this.conditionIDField;
            }
            set {
                this.conditionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNight {
            get {
                return this.isNightField;
            }
            set {
                this.isNightField = value;
            }
        }
        
        /// <remarks/>
        public string Prediction {
            get {
                return this.predictionField;
            }
            set {
                this.predictionField = value;
            }
        }
        
        /// <remarks/>
        public string ShortPrediction {
            get {
                return this.shortPredictionField;
            }
            set {
                this.shortPredictionField = value;
            }
        }
        
        /// <remarks/>
        public string ShortTitle {
            get {
                return this.shortTitleField;
            }
            set {
                this.shortTitleField = value;
            }
        }
        
        /// <remarks/>
        public string TempHigh {
            get {
                return this.tempHighField;
            }
            set {
                this.tempHighField = value;
            }
        }
        
        /// <remarks/>
        public string TempLow {
            get {
                return this.tempLowField;
            }
            set {
                this.tempLowField = value;
            }
        }
        
        /// <remarks/>
        public string TempUnit {
            get {
                return this.tempUnitField;
            }
            set {
                this.tempUnitField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string WebUrl {
            get {
                return this.webUrlField;
            }
            set {
                this.webUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class ApiForecastIssueData {
        
        private string cityField;
        
        private string cityCodeField;
        
        private string countryField;
        
        private string forecastDateField;
        
        private string stateField;
        
        private string webUrlField;
        
        private string zipCodeField;
        
        private string zoneField;
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string CityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string ForecastDate {
            get {
                return this.forecastDateField;
            }
            set {
                this.forecastDateField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string WebUrl {
            get {
                return this.webUrlField;
            }
            set {
                this.webUrlField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class ApiAlertIssueData {
        
        private int alertCountField;
        
        private string countyField;
        
        private string fipsField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string webUrlField;
        
        /// <remarks/>
        public int AlertCount {
            get {
                return this.alertCountField;
            }
            set {
                this.alertCountField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string Fips {
            get {
                return this.fipsField;
            }
            set {
                this.fipsField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WebUrl {
            get {
                return this.webUrlField;
            }
            set {
                this.webUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class ApiAlertData {
        
        private System.DateTime expiryDateTimeField;
        
        private string expiryTimeZoneField;
        
        private string idField;
        
        private System.DateTime issueDateTimeField;
        
        private string issueTimeZoneField;
        
        private string messageField;
        
        private string titleField;
        
        private string typeField;
        
        private string zipCodeField;
        
        private string webUrlField;
        
        /// <remarks/>
        public System.DateTime ExpiryDateTime {
            get {
                return this.expiryDateTimeField;
            }
            set {
                this.expiryDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ExpiryTimeZone {
            get {
                return this.expiryTimeZoneField;
            }
            set {
                this.expiryTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime IssueDateTime {
            get {
                return this.issueDateTimeField;
            }
            set {
                this.issueDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string IssueTimeZone {
            get {
                return this.issueTimeZoneField;
            }
            set {
                this.issueTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WebUrl {
            get {
                return this.webUrlField;
            }
            set {
                this.webUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class LiveWeatherData {
        
        private string auxTemperatureField;
        
        private string auxTemperatureRateField;
        
        private string cityField;
        
        private string cityCodeField;
        
        private string countryField;
        
        private string currIconField;
        
        private string currDescField;
        
        private string dewPointField;
        
        private int elevationField;
        
        private string elevationUnitField;
        
        private string feelsLikeField;
        
        private System.DateTime gustTimeField;
        
        private string gustWindSpeedField;
        
        private string gustWindSpeedUnitField;
        
        private string gustWindDirectionStringField;
        
        private string gustWindDirectionDegreesField;
        
        private string humidityField;
        
        private string humidityUnitField;
        
        private string humidityHighField;
        
        private string humidityLowField;
        
        private string humidityRateField;
        
        private string inputLocationUrlField;
        
        private int moonPhaseField;
        
        private string moonPhaseImageField;
        
        private string pressureField;
        
        private string pressureUnitField;
        
        private string pressureHighField;
        
        private string pressureLowField;
        
        private string pressureRateField;
        
        private string pressureRateUnitField;
        
        private string lightField;
        
        private string lightRateField;
        
        private string indoorTemperatureField;
        
        private string indoorTemperatureRateField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private string obDateField;
        
        private System.DateTime obDateTimeField;
        
        private string rainMonthField;
        
        private string rainRateField;
        
        private string rainRateMaxField;
        
        private string rainRateUnitField;
        
        private string rainTodayField;
        
        private string rainUnitField;
        
        private string rainYearField;
        
        private string stateField;
        
        private string stationIDRequestedField;
        
        private string stationIDReturnedField;
        
        private string stationNameField;
        
        private string stationURLField;
        
        private System.DateTime sunriseField;
        
        private System.DateTime sunsetField;
        
        private string temperatureField;
        
        private string temperatureHighField;
        
        private string temperatureLowField;
        
        private string temperatureRateField;
        
        private string temperatureRateUnitField;
        
        private string temperatureUnitField;
        
        private string timeZoneField;
        
        private double timeZoneOffsetField;
        
        private string webUrlField;
        
        private string wetBulbField;
        
        private string windDirectionField;
        
        private string windDirectionAvgField;
        
        private string windDirectionDegreesField;
        
        private string windSpeedField;
        
        private string windSpeedAvgField;
        
        private string windSpeedUnitField;
        
        private string zipCodeField;
        
        /// <remarks/>
        public string AuxTemperature {
            get {
                return this.auxTemperatureField;
            }
            set {
                this.auxTemperatureField = value;
            }
        }
        
        /// <remarks/>
        public string AuxTemperatureRate {
            get {
                return this.auxTemperatureRateField;
            }
            set {
                this.auxTemperatureRateField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string CityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string CurrIcon {
            get {
                return this.currIconField;
            }
            set {
                this.currIconField = value;
            }
        }
        
        /// <remarks/>
        public string CurrDesc {
            get {
                return this.currDescField;
            }
            set {
                this.currDescField = value;
            }
        }
        
        /// <remarks/>
        public string DewPoint {
            get {
                return this.dewPointField;
            }
            set {
                this.dewPointField = value;
            }
        }
        
        /// <remarks/>
        public int Elevation {
            get {
                return this.elevationField;
            }
            set {
                this.elevationField = value;
            }
        }
        
        /// <remarks/>
        public string ElevationUnit {
            get {
                return this.elevationUnitField;
            }
            set {
                this.elevationUnitField = value;
            }
        }
        
        /// <remarks/>
        public string FeelsLike {
            get {
                return this.feelsLikeField;
            }
            set {
                this.feelsLikeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime GustTime {
            get {
                return this.gustTimeField;
            }
            set {
                this.gustTimeField = value;
            }
        }
        
        /// <remarks/>
        public string GustWindSpeed {
            get {
                return this.gustWindSpeedField;
            }
            set {
                this.gustWindSpeedField = value;
            }
        }
        
        /// <remarks/>
        public string GustWindSpeedUnit {
            get {
                return this.gustWindSpeedUnitField;
            }
            set {
                this.gustWindSpeedUnitField = value;
            }
        }
        
        /// <remarks/>
        public string GustWindDirectionString {
            get {
                return this.gustWindDirectionStringField;
            }
            set {
                this.gustWindDirectionStringField = value;
            }
        }
        
        /// <remarks/>
        public string GustWindDirectionDegrees {
            get {
                return this.gustWindDirectionDegreesField;
            }
            set {
                this.gustWindDirectionDegreesField = value;
            }
        }
        
        /// <remarks/>
        public string Humidity {
            get {
                return this.humidityField;
            }
            set {
                this.humidityField = value;
            }
        }
        
        /// <remarks/>
        public string HumidityUnit {
            get {
                return this.humidityUnitField;
            }
            set {
                this.humidityUnitField = value;
            }
        }
        
        /// <remarks/>
        public string HumidityHigh {
            get {
                return this.humidityHighField;
            }
            set {
                this.humidityHighField = value;
            }
        }
        
        /// <remarks/>
        public string HumidityLow {
            get {
                return this.humidityLowField;
            }
            set {
                this.humidityLowField = value;
            }
        }
        
        /// <remarks/>
        public string HumidityRate {
            get {
                return this.humidityRateField;
            }
            set {
                this.humidityRateField = value;
            }
        }
        
        /// <remarks/>
        public string InputLocationUrl {
            get {
                return this.inputLocationUrlField;
            }
            set {
                this.inputLocationUrlField = value;
            }
        }
        
        /// <remarks/>
        public int MoonPhase {
            get {
                return this.moonPhaseField;
            }
            set {
                this.moonPhaseField = value;
            }
        }
        
        /// <remarks/>
        public string MoonPhaseImage {
            get {
                return this.moonPhaseImageField;
            }
            set {
                this.moonPhaseImageField = value;
            }
        }
        
        /// <remarks/>
        public string Pressure {
            get {
                return this.pressureField;
            }
            set {
                this.pressureField = value;
            }
        }
        
        /// <remarks/>
        public string PressureUnit {
            get {
                return this.pressureUnitField;
            }
            set {
                this.pressureUnitField = value;
            }
        }
        
        /// <remarks/>
        public string PressureHigh {
            get {
                return this.pressureHighField;
            }
            set {
                this.pressureHighField = value;
            }
        }
        
        /// <remarks/>
        public string PressureLow {
            get {
                return this.pressureLowField;
            }
            set {
                this.pressureLowField = value;
            }
        }
        
        /// <remarks/>
        public string PressureRate {
            get {
                return this.pressureRateField;
            }
            set {
                this.pressureRateField = value;
            }
        }
        
        /// <remarks/>
        public string PressureRateUnit {
            get {
                return this.pressureRateUnitField;
            }
            set {
                this.pressureRateUnitField = value;
            }
        }
        
        /// <remarks/>
        public string Light {
            get {
                return this.lightField;
            }
            set {
                this.lightField = value;
            }
        }
        
        /// <remarks/>
        public string LightRate {
            get {
                return this.lightRateField;
            }
            set {
                this.lightRateField = value;
            }
        }
        
        /// <remarks/>
        public string IndoorTemperature {
            get {
                return this.indoorTemperatureField;
            }
            set {
                this.indoorTemperatureField = value;
            }
        }
        
        /// <remarks/>
        public string IndoorTemperatureRate {
            get {
                return this.indoorTemperatureRateField;
            }
            set {
                this.indoorTemperatureRateField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string ObDate {
            get {
                return this.obDateField;
            }
            set {
                this.obDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ObDateTime {
            get {
                return this.obDateTimeField;
            }
            set {
                this.obDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string RainMonth {
            get {
                return this.rainMonthField;
            }
            set {
                this.rainMonthField = value;
            }
        }
        
        /// <remarks/>
        public string RainRate {
            get {
                return this.rainRateField;
            }
            set {
                this.rainRateField = value;
            }
        }
        
        /// <remarks/>
        public string RainRateMax {
            get {
                return this.rainRateMaxField;
            }
            set {
                this.rainRateMaxField = value;
            }
        }
        
        /// <remarks/>
        public string RainRateUnit {
            get {
                return this.rainRateUnitField;
            }
            set {
                this.rainRateUnitField = value;
            }
        }
        
        /// <remarks/>
        public string RainToday {
            get {
                return this.rainTodayField;
            }
            set {
                this.rainTodayField = value;
            }
        }
        
        /// <remarks/>
        public string RainUnit {
            get {
                return this.rainUnitField;
            }
            set {
                this.rainUnitField = value;
            }
        }
        
        /// <remarks/>
        public string RainYear {
            get {
                return this.rainYearField;
            }
            set {
                this.rainYearField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string StationIDRequested {
            get {
                return this.stationIDRequestedField;
            }
            set {
                this.stationIDRequestedField = value;
            }
        }
        
        /// <remarks/>
        public string StationIDReturned {
            get {
                return this.stationIDReturnedField;
            }
            set {
                this.stationIDReturnedField = value;
            }
        }
        
        /// <remarks/>
        public string StationName {
            get {
                return this.stationNameField;
            }
            set {
                this.stationNameField = value;
            }
        }
        
        /// <remarks/>
        public string StationURL {
            get {
                return this.stationURLField;
            }
            set {
                this.stationURLField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Sunrise {
            get {
                return this.sunriseField;
            }
            set {
                this.sunriseField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Sunset {
            get {
                return this.sunsetField;
            }
            set {
                this.sunsetField = value;
            }
        }
        
        /// <remarks/>
        public string Temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
            }
        }
        
        /// <remarks/>
        public string TemperatureHigh {
            get {
                return this.temperatureHighField;
            }
            set {
                this.temperatureHighField = value;
            }
        }
        
        /// <remarks/>
        public string TemperatureLow {
            get {
                return this.temperatureLowField;
            }
            set {
                this.temperatureLowField = value;
            }
        }
        
        /// <remarks/>
        public string TemperatureRate {
            get {
                return this.temperatureRateField;
            }
            set {
                this.temperatureRateField = value;
            }
        }
        
        /// <remarks/>
        public string TemperatureRateUnit {
            get {
                return this.temperatureRateUnitField;
            }
            set {
                this.temperatureRateUnitField = value;
            }
        }
        
        /// <remarks/>
        public string TemperatureUnit {
            get {
                return this.temperatureUnitField;
            }
            set {
                this.temperatureUnitField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public double TimeZoneOffset {
            get {
                return this.timeZoneOffsetField;
            }
            set {
                this.timeZoneOffsetField = value;
            }
        }
        
        /// <remarks/>
        public string WebUrl {
            get {
                return this.webUrlField;
            }
            set {
                this.webUrlField = value;
            }
        }
        
        /// <remarks/>
        public string WetBulb {
            get {
                return this.wetBulbField;
            }
            set {
                this.wetBulbField = value;
            }
        }
        
        /// <remarks/>
        public string WindDirection {
            get {
                return this.windDirectionField;
            }
            set {
                this.windDirectionField = value;
            }
        }
        
        /// <remarks/>
        public string WindDirectionAvg {
            get {
                return this.windDirectionAvgField;
            }
            set {
                this.windDirectionAvgField = value;
            }
        }
        
        /// <remarks/>
        public string WindDirectionDegrees {
            get {
                return this.windDirectionDegreesField;
            }
            set {
                this.windDirectionDegreesField = value;
            }
        }
        
        /// <remarks/>
        public string WindSpeed {
            get {
                return this.windSpeedField;
            }
            set {
                this.windSpeedField = value;
            }
        }
        
        /// <remarks/>
        public string WindSpeedAvg {
            get {
                return this.windSpeedAvgField;
            }
            set {
                this.windSpeedAvgField = value;
            }
        }
        
        /// <remarks/>
        public string WindSpeedUnit {
            get {
                return this.windSpeedUnitField;
            }
            set {
                this.windSpeedUnitField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class LiveCompactWeatherData {
        
        private string cityField;
        
        private string cityCodeField;
        
        private string countryField;
        
        private string currIconField;
        
        private string currDescField;
        
        private string gustWindSpeedField;
        
        private string gustWindSpeedUnitField;
        
        private string gustWindDirectionStringField;
        
        private string inputLocationUrlField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private string obDateField;
        
        private System.DateTime obDateTimeField;
        
        private string rainTodayField;
        
        private string rainUnitField;
        
        private string stateField;
        
        private string stationIDRequestedField;
        
        private string stationIDReturnedField;
        
        private string stationNameField;
        
        private string temperatureField;
        
        private string temperatureUnitField;
        
        private string timeZoneField;
        
        private double timeZoneOffsetField;
        
        private string webUrlField;
        
        private string windDirectionField;
        
        private string windSpeedField;
        
        private string windSpeedUnitField;
        
        private string zipCodeField;
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string CityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string CurrIcon {
            get {
                return this.currIconField;
            }
            set {
                this.currIconField = value;
            }
        }
        
        /// <remarks/>
        public string CurrDesc {
            get {
                return this.currDescField;
            }
            set {
                this.currDescField = value;
            }
        }
        
        /// <remarks/>
        public string GustWindSpeed {
            get {
                return this.gustWindSpeedField;
            }
            set {
                this.gustWindSpeedField = value;
            }
        }
        
        /// <remarks/>
        public string GustWindSpeedUnit {
            get {
                return this.gustWindSpeedUnitField;
            }
            set {
                this.gustWindSpeedUnitField = value;
            }
        }
        
        /// <remarks/>
        public string GustWindDirectionString {
            get {
                return this.gustWindDirectionStringField;
            }
            set {
                this.gustWindDirectionStringField = value;
            }
        }
        
        /// <remarks/>
        public string InputLocationUrl {
            get {
                return this.inputLocationUrlField;
            }
            set {
                this.inputLocationUrlField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string ObDate {
            get {
                return this.obDateField;
            }
            set {
                this.obDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ObDateTime {
            get {
                return this.obDateTimeField;
            }
            set {
                this.obDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string RainToday {
            get {
                return this.rainTodayField;
            }
            set {
                this.rainTodayField = value;
            }
        }
        
        /// <remarks/>
        public string RainUnit {
            get {
                return this.rainUnitField;
            }
            set {
                this.rainUnitField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string StationIDRequested {
            get {
                return this.stationIDRequestedField;
            }
            set {
                this.stationIDRequestedField = value;
            }
        }
        
        /// <remarks/>
        public string StationIDReturned {
            get {
                return this.stationIDReturnedField;
            }
            set {
                this.stationIDReturnedField = value;
            }
        }
        
        /// <remarks/>
        public string StationName {
            get {
                return this.stationNameField;
            }
            set {
                this.stationNameField = value;
            }
        }
        
        /// <remarks/>
        public string Temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
            }
        }
        
        /// <remarks/>
        public string TemperatureUnit {
            get {
                return this.temperatureUnitField;
            }
            set {
                this.temperatureUnitField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public double TimeZoneOffset {
            get {
                return this.timeZoneOffsetField;
            }
            set {
                this.timeZoneOffsetField = value;
            }
        }
        
        /// <remarks/>
        public string WebUrl {
            get {
                return this.webUrlField;
            }
            set {
                this.webUrlField = value;
            }
        }
        
        /// <remarks/>
        public string WindDirection {
            get {
                return this.windDirectionField;
            }
            set {
                this.windDirectionField = value;
            }
        }
        
        /// <remarks/>
        public string WindSpeed {
            get {
                return this.windSpeedField;
            }
            set {
                this.windSpeedField = value;
            }
        }
        
        /// <remarks/>
        public string WindSpeedUnit {
            get {
                return this.windSpeedUnitField;
            }
            set {
                this.windSpeedUnitField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class ApiStationData {
        
        private string cityField;
        
        private string cityCodeField;
        
        private string cityTypeField;
        
        private string countryField;
        
        private string distanceField;
        
        private string distanceUnitField;
        
        private string latitudeField;
        
        private string longitudeField;
        
        private string stateField;
        
        private string stationIDField;
        
        private string stationNameField;
        
        private string zipCodeField;
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string CityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CityType {
            get {
                return this.cityTypeField;
            }
            set {
                this.cityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public string DistanceUnit {
            get {
                return this.distanceUnitField;
            }
            set {
                this.distanceUnitField = value;
            }
        }
        
        /// <remarks/>
        public string Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public string Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string StationID {
            get {
                return this.stationIDField;
            }
            set {
                this.stationIDField = value;
            }
        }
        
        /// <remarks/>
        public string StationName {
            get {
                return this.stationNameField;
            }
            set {
                this.stationNameField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public partial class LocationUSWorldCityData {
        
        private string cityNameField;
        
        private string cityCodeField;
        
        private string countryCodeField;
        
        private bool isUSCityField;
        
        private decimal latitudeField;
        
        private decimal longitudeField;
        
        private string provinceField;
        
        private string stateField;
        
        private decimal timeZoneField;
        
        private string zipCodeField;
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public string CityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool isUSCity {
            get {
                return this.isUSCityField;
            }
            set {
                this.isUSCityField = value;
            }
        }
        
        /// <remarks/>
        public decimal Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string Province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public decimal TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.wxbug.net/")]
    public enum UnitType {
        
        /// <remarks/>
        English,
        
        /// <remarks/>
        Metric,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLocationListCompletedEventHandler(object sender, GetLocationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiLocationData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiLocationData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUSWorldCityByLatLongCompletedEventHandler(object sender, GetUSWorldCityByLatLongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUSWorldCityByLatLongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUSWorldCityByLatLongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationUSWorldCityData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationUSWorldCityData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetStationListByCityCodeCompletedEventHandler(object sender, GetStationListByCityCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationListByCityCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationListByCityCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiStationData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiStationData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetStationListByUSZipCodeCompletedEventHandler(object sender, GetStationListByUSZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationListByUSZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationListByUSZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiStationData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiStationData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLiveCompactWeatherByCityCodeCompletedEventHandler(object sender, GetLiveCompactWeatherByCityCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveCompactWeatherByCityCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveCompactWeatherByCityCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LiveCompactWeatherData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LiveCompactWeatherData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLiveCompactWeatherByUSZipCodeCompletedEventHandler(object sender, GetLiveCompactWeatherByUSZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveCompactWeatherByUSZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveCompactWeatherByUSZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LiveCompactWeatherData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LiveCompactWeatherData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLiveCompactWeatherByStationIDCompletedEventHandler(object sender, GetLiveCompactWeatherByStationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveCompactWeatherByStationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveCompactWeatherByStationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LiveCompactWeatherData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LiveCompactWeatherData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLiveWeatherByCityCodeCompletedEventHandler(object sender, GetLiveWeatherByCityCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveWeatherByCityCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveWeatherByCityCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LiveWeatherData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LiveWeatherData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLiveWeatherByUSZipCodeCompletedEventHandler(object sender, GetLiveWeatherByUSZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveWeatherByUSZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveWeatherByUSZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LiveWeatherData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LiveWeatherData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLiveWeatherByStationIDCompletedEventHandler(object sender, GetLiveWeatherByStationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveWeatherByStationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveWeatherByStationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LiveWeatherData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LiveWeatherData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAlertsDataListCompletedEventHandler(object sender, GetAlertsDataListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlertsDataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlertsDataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiAlertData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiAlertData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAlertsIssueDataCompletedEventHandler(object sender, GetAlertsIssueDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlertsIssueDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlertsIssueDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiAlertIssueData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiAlertIssueData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetForecastIssueDetailsByCityCodeCompletedEventHandler(object sender, GetForecastIssueDetailsByCityCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForecastIssueDetailsByCityCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForecastIssueDetailsByCityCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiForecastIssueData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiForecastIssueData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetForecastIssueDetailsByUSZipCodeCompletedEventHandler(object sender, GetForecastIssueDetailsByUSZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForecastIssueDetailsByUSZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForecastIssueDetailsByUSZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiForecastIssueData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiForecastIssueData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetForecastByCityCodeCompletedEventHandler(object sender, GetForecastByCityCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForecastByCityCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForecastByCityCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiForecastData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiForecastData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetForecastByUSZipCodeCompletedEventHandler(object sender, GetForecastByUSZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForecastByUSZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForecastByUSZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiForecastData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiForecastData[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591